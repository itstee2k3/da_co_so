@model do_an_ltweb.Models.Product
@inject do_an_ltweb.Models.IProductRepository productRepository

@{
    ViewData["Title"] = "Detail Product";
}

<div class="detail-product">
    <!-- content -->
    <section class="py-5">
        <div class="container">
            <div class="row gx-5">

                <aside class="col-lg-6">

                    <div class="border rounded-4 mb-3 d-flex justify-content-center">
                        <a data-fslightbox="mygalley" class="rounded-4" target="_blank" data-type="image">
                            <img style="max-width: 100%; max-height: 100vh; margin: auto;" class="rounded-4 fit" src="@Model.ImageUrl" />
                        </a>
                    </div>
                    <div class="d-flex justify-content-center mb-3">
                        <div data-fslightbox="mygalley" class="mx-1 rounded-2" target="_blank" data-type="image" class="item-thumb">
                            <img class="rounded-2" src="/images/size_glasses.webp" />
                            <div class="d-flex">
                                <span id="size1" style="width: 33.33%" class="d-flex justify-content-center"></span>
                                <span id="size2" style="width: 33.33%" class="d-flex justify-content-center"></span>
                                <span id="size3" style="width: 33.33%" class="d-flex justify-content-center"></span>
                            </div>
                        </div>
                    </div>

                    <!--<div class="rounded-4 mb-3 d-flex justify-content-center">-->
                    <!-- Thay thế nút button bằng thẻ img để hiển thị hình ảnh sản phẩm -->
                    <!--<img id="show-360-image" src="/images/photo-360.jpg" alt="Product 360" class="border" style="max-width: 100%; max-height: 100vh; margin: auto;">
                    </div>-->
                    <div class="rounded-4 mb-3 d-flex justify-content-center">
                        <!-- Sử dụng một nút hoặc hình ảnh để kích hoạt mô hình 360 độ -->
                        @*<button id="show-360-button" class="border" style="max-width: 100%; max-height: 100vh; margin: auto;"><img src="/images/photo-360.jpg"/></button>*@
                        <img id="show-360-image" src="/images/photo-360.jpg" alt="Product 360" class="border" style="max-width: 100%; max-height: 100vh; margin: auto;">

                    </div>

                </aside>

                <main class="col-lg-6">
                    <div class="ps-lg-3">
                        <h1 class="title text-dark">
                            @Model.NameProduct
                        </h1>
                        <div class="mb-3">
                            <span class="h5">@Model.Price.ToString("N0")đ</span>
                        </div>

                        @if (Model.Nums > 0)
                        {
                            <p>
                                Status: In stock
                            </p>
                        }
                        else
                        {
                            <p>
                                Status: Out of stock
                            </p>
                        }

                        <br />

                        <div class="row">
                            <dt class="col-3">Origin:</dt>
                            @if (Model.IdCategoryOrigin != null)
                            {
                                if (Model.CategoryOrigin != null && !string.IsNullOrEmpty(Model.CategoryOrigin.NameCategory))
                                {
                                    <dd class="col-9">@Model.CategoryOrigin.NameCategory</dd>
                                }
                                else
                                {
                                    <dd class="col-9">N/A</dd>
                                }
                            }
                            else
                            {
                                <dd class="col-9">N/A</dd>
                            }

                            <dt class="col-3">Frame Color:</dt>
                            @if (Model.IdCategoryFrameColor != null)
                            {
                                if (Model.CategoryFrameColor != null && !string.IsNullOrEmpty(Model.CategoryFrameColor.NameCategory))
                                {
                                    <dd class="col-9">@Model.CategoryFrameColor.NameCategory</dd>
                                }
                                else
                                {
                                    <dd class="col-9">N/A</dd>
                                }
                            }
                            else
                            {
                                <dd class="col-9">N/A</dd>
                            }

                            <dt class="col-3">Iris Color:</dt>
                            @if (Model.IdCategoryIrisColor != null)
                            {
                                if (Model.CategoryIrisColor != null && !string.IsNullOrEmpty(Model.CategoryIrisColor.NameCategory))
                                {
                                    <dd class="col-9">@Model.CategoryIrisColor.NameCategory</dd>
                                }
                                else
                                {
                                    <dd class="col-9">N/A</dd>
                                }
                            }
                            else
                            {
                                <dd class="col-9">N/A</dd>
                            }

                            <dt class="col-3">Size:</dt>
                            @if (Model.Size != null)
                            {
                                <dd class="col-9">@Model.Size</dd>
                            }
                            else
                            {
                                <dd class="col-9">N/A</dd>
                            }

                            <dt class="col-3">Brand:</dt>
                            @if (Model.IdCategoryBrand != null)
                            {
                                if (Model.CategoryBrand != null && !string.IsNullOrEmpty(Model.CategoryBrand.NameCategory))
                                {
                                    <dd class="col-9">@Model.CategoryBrand.NameCategory</dd>
                                }
                                else
                                {
                                    <dd class="col-9">N/A</dd>
                                }
                            }
                            else
                            {
                                <dd class="col-9">N/A</dd>
                            }

                        </div>

                        <hr />

                        <div class="row mb-4">
                            <div class="col-md-4 col-6 mb-3">
                                <label class="mb-2 d-block">Quantity</label>
                                <div class="input-group mb-3" style="width: 170px;">
                                    <button class="btn btn-outline-secondary" type="button" id="button-subtract">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                    <span class="form-control text-center border border-secondary" id="display-number"></span>
                                    <button class="btn btn-outline-secondary" type="button" id="button-add">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        @*<a href="#" class="btn btn-warning shadow-0"> Buy now </a>*@
                        <a id="add-to-cart-button" class="btn-main btn shadow-0 text-white" style="background-color: #03cafa" data-product-id="@Model.IdProduct"> <i class="me-1 fa fa-shopping-basket text-white"></i> Add to cart </a>
                        <a href="#" class="btn btn-light border border-secondary icon-hover px-3"> <i class="me-1 fa fa-heart fa-lg"></i> Save </a>
                    </div>
                </main>
            </div>
        </div>
    </section>
    <!-- content -->
    <!--<img src="/images/360/LapTop/Images/Macbook-360-org-1.jpg"/>-->
    <!-- Đổi cấu trúc HTML cho hiển thị 360 độ -->
    <div id="viewer-container" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(0,0,0,0.8); z-index:1000; justify-content:center; align-items:center;">
        <div id="viewer" style="position:relative; width:90%; height:90%; display:flex; justify-content:center; align-items:center;"></div>
        <button id="close-viewer" class="btn btn-danger mt-3" style="position:absolute; top:10px; right:10px;">Close</button>
    </div>

</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Lấy các phần tử cần xử lý
        var displayNumber = document.getElementById('display-number');
        var buttonSubtract = document.getElementById('button-subtract');
        var buttonAdd = document.getElementById('button-add');
        var addToCartButton = document.getElementById('add-to-cart-button');

        // Khởi tạo giá trị ban đầu
        var quantity = 1;
        displayNumber.textContent = quantity;

        // Xử lý khi click vào nút trừ
        buttonSubtract.addEventListener('click', function () {
            // Kiểm tra nếu giá trị số hiện tại lớn hơn 1
            if (quantity > 1) {
                quantity -= 1;
                displayNumber.textContent = quantity;
            }
        });

        // Xử lý khi click vào nút cộng
        buttonAdd.addEventListener('click', function () {
            quantity += 1;
            displayNumber.textContent = quantity;
        });

        addToCartButton.addEventListener("click", function () {
            // Lấy ID sản phẩm từ thuộc tính data-product-id của thẻ button
            var productId = addToCartButton.getAttribute('data-product-id');

            // Lấy giá trị quantity từ nội dung của thẻ span
            var quantity = parseInt(displayNumber.textContent);

            // Kiểm tra nếu số lượng đặt hàng lớn hơn số lượng có sẵn
            if (quantity > @Model.Nums) {
                alert("The quantity you are trying to order exceeds the available stock. Remaining stock: " + @Model.Nums);
                return;
            }

            var xhr = new XMLHttpRequest();
            xhr.open("POST", '/Cart/AddToCart', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        var response = JSON.parse(xhr.responseText);
                        if (response.error) {
                            alert("Log in to add to cart");
                            console.error("Đăng nhập để thêm vào giỏ hàng");
                        } else {
                            alert("Add to cart successfully!");
                            console.log("Thêm vào giỏ hàng thành công!");
                        }
                    } else {
                        alert("Error sending request");
                        console.error("Lỗi khi gửi yêu cầu: " + xhr.statusText);
                    }
                }
            };
            xhr.send('productId=' + productId + '&quantity=' + quantity);
        });

        var sizes = '@Model.Size';


        // Tách chuỗi thành mảng
        var sizeArray = sizes.split('-');

        // Hàm để kiểm tra và trả về giá trị hoặc 'N/A'
        function getSizeValue(size) {
            return size && size.trim() !== '' ? size : 'N/A';
        }

        // Gán giá trị cho các thẻ span
        document.getElementById('size1').innerText = getSizeValue(sizeArray[0]);
        document.getElementById('size2').innerText = getSizeValue(sizeArray[1]);
        document.getElementById('size3').innerText = getSizeValue(sizeArray[2]);

        // Lấy các phần tử cần xử lý
        var show360Image = document.getElementById('show-360-image');
        var viewerContainer = document.getElementById('viewer-container');
        var closeViewerButton = document.getElementById('close-viewer');
        var viewer = document.getElementById('viewer');
        var currentImageIndex = 0;
        var isDragging = false;
        var startX;
        var autoRotateInterval;
        var autoRotateSpeed = 100; // Tốc độ quay tự động

        // Kiểm tra xem sản phẩm có hình ảnh 360 không
        var has360Image = @(Model.Images != null && Model.Images.Count > 0 ? "true" : "false");

        // Ẩn hình ảnh 360 nếu sản phẩm không có hình ảnh 360
        if (!has360Image) {
            show360Image.style.display = 'none';
        }

        // Hàm để tải hình ảnh vào trong phần xem 360 độ
        function loadImages() {
            @if(Model.Images != null && Model.Images.Count > 0)
            {
                for(var i = 0; i < Model.Images.Count; i++)
                {
                    var imageUrl = Model.Images[i].Url; // Lấy đường dẫn ảnh từ mỗi phần tử trong danh sách Images
                    <text>
                    var img = document.createElement('img');
                    img.src = '@(imageUrl)';
                    img.style.display = 'none'; // Ẩn hình ảnh ban đầu
                    viewer.appendChild(img);
                    </text>
                }
            }
        }

        // Hàm để hiển thị hình ảnh tại chỉ mục nhất định trong phần xem
        function showImage(index) {
            var images = viewer.getElementsByTagName('img');
            for (var i = 0; i < images.length; i++) {
                images[i].style.display = 'none'; // Ẩn tất cả hình ảnh
            }
            images[index].style.display = 'block'; // Hiển thị hình ảnh tại chỉ mục
        }

        // Hàm để bắt đầu quay tự động của phần xem
        function startAutoRotate() {
            stopAutoRotate(); // Dừng bất kỳ intervals nào đang tồn tại trước khi bắt đầu một intervals mới
            autoRotateInterval = setInterval(function () {
                currentImageIndex = (currentImageIndex + 1) % 36; // Lặp lại các hình ảnh
                showImage(currentImageIndex);
            }, autoRotateSpeed);
        }

        // Hàm để dừng quay tự động của phần xem
        function stopAutoRotate() {
            clearInterval(autoRotateInterval);
        }

        // Hàm để đặt lại tốc độ quay tự động về giá trị ban đầu
        function resetAutoRotateSpeed() {
            autoRotateSpeed = 100; // Đặt lại tốc độ về giá trị ban đầu
        }

        // Sự kiện click để mở phần xem hình ảnh 360 độ
        show360Image.addEventListener('click', function () {
            if (viewer.getElementsByTagName('img').length === 0) {
                loadImages(); // Tải hình ảnh nếu chưa tải
            }
            viewerContainer.style.display = 'flex'; // Hiển thị phần xem
            showImage(currentImageIndex); // Hiển thị hình ảnh ban đầu
            resetAutoRotateSpeed(); // Đặt lại tốc độ mỗi khi phần xem được mở
            startAutoRotate(); // Bắt đầu quay tự động
        });

        // Sự kiện click để đóng phần xem
        closeViewerButton.addEventListener('click', function () {
            viewerContainer.style.display = 'none'; // Ẩn phần xem
            stopAutoRotate(); // Dừng quay tự động
        });

        // Sự kiện mousedown để bắt đầu kéo hình ảnh
        viewer.addEventListener('mousedown', function (event) {
            isDragging = true;
            startX = event.clientX;
            stopAutoRotate(); // Dừng quay tự động khi bắt đầu kéo
            event.preventDefault(); // Ngăn chặn việc chọn văn bản khi kéo
        });

        // Sự kiện mousemove để di chuyển hình ảnh khi kéo
        viewer.addEventListener('mousemove', function (event) {
            if (isDragging) {
                var dx = event.clientX - startX;
                if (dx > 5) { // Nếu di chuyển sang phải hơn 5px
                    currentImageIndex = (currentImageIndex + 1) % 36;
                    showImage(currentImageIndex);
                    startX = event.clientX;
                } else if (dx < -5) { // Nếu di chuyển sang trái hơn 5px
                    currentImageIndex = (currentImageIndex - 1 + 36) % 36;
                    showImage(currentImageIndex);
                    startX = event.clientX;
                }
            }
        });

        // Sự kiện mouseup để kết thúc kéo
        viewer.addEventListener('mouseup', function () {
            isDragging = false;
            startAutoRotate(); // Bắt đầu quay tự động sau khi kéo kết thúc
        });

        // Sự kiện mouseleave để kết thúc kéo khi rời khỏi phần xem
        viewer.addEventListener('mouseleave', function () {
            isDragging = false;
            startAutoRotate(); // Bắt đầu quay tự động sau khi kéo kết thúc
        });
    });
</script>