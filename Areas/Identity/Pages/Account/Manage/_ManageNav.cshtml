@inject SignInManager<User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<nav class="nav flex-column nav-pills">
    <a class="nav-item nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">
        <i class="bi bi-person-fill"></i> Profile
    </a>
    <a class="nav-item nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">
        <i class="bi bi-envelope-fill"></i> Email
    </a>
    <a class="nav-item nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">
        <i class="bi bi-key-fill"></i> Password
    </a>
    @if (hasExternalLogins)
    {
        <a class="nav-item nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" id="external-login" asp-page="./ExternalLogins">
            <i class="bi bi-box-arrow-in-right"></i> External logins
        </a>
    }
    <a class="nav-item nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">
        <i class="bi bi-shield-lock-fill"></i> Favorite Products
    </a>
    <a class="nav-item nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">
        <i class="bi bi-file-person-fill"></i> Personal data
    </a>
    <a class="nav-item nav-link @ManageNavPages.YourOrderNavClass(ViewContext)" id="your-order" asp-page="./Order">
        <i class="bi bi-file-person-fill"></i>Your order
    </a>
</nav>
